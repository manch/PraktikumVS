/*
 * 05. 2. 12
 */
package timeclientrfc868;

import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.IOException;
import java.net.DatagramPacket;
import java.net.DatagramSocket;
import java.net.InetAddress;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;

import com.sun.corba.se.impl.protocol.giopmsgheaders.Message;

public class TimeClientRFC868 {

  public static void main(String[] args) throws IOException {
    String host = "ntp0.nl.net";
    // String host = "ntp2.curie.fr"; //ntp2: Requests may be blocked
    // String host = "ptbtime1.ptb.de";  // Zeitserver Physikalisch-Technische
    int port = 37;                    // Bundesanstalt (PTB), Server auf Port 37
    DatagramSocket socket = new DatagramSocket();
    byte msg[] = new byte[4];         // Feld für Protokolldateneinheit
    InetAddress addr = InetAddress.getByName(host);

    DatagramPacket packet = new DatagramPacket(msg, 0, addr, port); // Laenge 0
    socket.send(packet);
    System.out.println("Die Zeit wird angefragt bei " + host + " Port " + port);
    packet = new DatagramPacket(msg, msg.length);                   // Laenge 4
    socket.receive(packet);
    System.out.println("Der Server antwortet: " + formatTime(packet.getData()));
    System.out.println("Das ist fuer das Praktikum:\t" + formatTime2(packet.getData()));
    socket.close();
  }

  // Time Server liefert C-Typ unsigned int (4 Byte)
  // RFC868 beginnt am 1.1.1900 in s, Java am 1.1.1970 in ms
  // Für Java in long wandeln (8 Byte) sowie Offset und Skalierung beachten
  private static Date formatTime(byte[] t) {
    long ptbZeit = 0;
    ptbZeit |= (((t[0] & 0xff) << 24) & 0xffffffffL);
    ptbZeit |= (((t[1] & 0xff) << 16) & 0xffffffffL);
    ptbZeit |= (((t[2] & 0xff) << 8) & 0xffffffffL);
    ptbZeit |= ((t[3] & 0xff) & 0xffffffffL);
    return new Date((ptbZeit - 2208988800L) * 1000); // Korrektur für Date()
  }
  
  private static Date formatTime2(byte[] t){
    ByteArrayInputStream bais = new ByteArrayInputStream(t);
    DataInputStream dis = new DataInputStream(bais);
    long ptbZeit = 0;
    try{
	  ptbZeit = dis.readLong();
    }
    catch(IOException ex){
	  Logger.getLogger(Message.class.getName()).log(Level.SEVERE, null, ex);
    }
    return new Date ((ptbZeit - 2208988800L) * 1000);
  }

}
